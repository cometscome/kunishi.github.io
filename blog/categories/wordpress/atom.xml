<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Wordpress | My Octopress Blog]]></title>
  <link href="http://kunishi.github.io/blog/categories/wordpress/atom.xml" rel="self"/>
  <link href="http://kunishi.github.io/"/>
  <updated>2015-06-16T17:13:02+09:00</updated>
  <id>http://kunishi.github.io/</id>
  <author>
    <name><![CDATA[Takeo Kunishima]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WordPressのソースコードリーディング(2)]]></title>
    <link href="http://kunishi.github.io/blog/2012/08/10/wordpress-code-reading-2/"/>
    <updated>2012-08-10T09:38:00+09:00</updated>
    <id>http://kunishi.github.io/blog/2012/08/10/wordpress-code-reading-2</id>
    <content type="html"><![CDATA[<p>昨日の続き。</p>

<h2>wp-config-sample.php</h2>

<p>https://github.com/WordPress/WordPress/blob/master/wp-config-sample.php</p>

<p>wp-config.phpはこれをコピーして作る。種々のパラメータの設定が中心だが、今は、これらのパラメータの意味はいいだろう。それを除くと、wp-settings.phpをrequire_onceしているだけ。</p>

<h2>wp-settings.php</h2>

<p>ここらへんから重要なコードが増えてきてる感じ。</p>

<p>まず、wp-includes/ ディレクトリの load.php, default-constants.php, version.phpをrequire。その後、次の関数を呼び出して設定を行っているが、これらはload.phpの中か? というわけで、load.phpへ寄り道。</p>

<ul>
<li>wp_initial_constants()</li>
<li>wp_check_php_mysql_versions()</li>
<li>wp_unregister_GLOBALS()</li>
<li>date_default_timezone_set('UTC') (当該関数がある場合、つまりPHP5以降)</li>
<li>wp_fix_server_vars()</li>
<li>wp_favicon_request()</li>
<li>wp_maintenance()</li>
<li>timer_start()</li>
<li>wp_debug_mode()</li>
</ul>


<h3>wp_initial_constants() (in wp-includes/default-constants.php)</h3>

<p>WordPress固有のパラメータの設定。それ以上特筆すべきことはないように思われる。</p>

<h3>wp_check_php_mysql_version() (in wp-includes/load.php)</h3>

<p>PHPのバージョン、MySQL extensionのロードの有無、wp-content/db.phpの有無のチェック。必要とされるPHPのバージョンは wp-includes/version.php にある。</p>

<p>関数中で wp_load_translations_early() という関数がエラー処理の前に呼ばれている。同じく load.php の中に定義されている関数で、localizationの設定を、通常のロードシーケンスとは異なるシーケンスで行う場合などに用いる。</p>

<h3>wp_unregister_GLOBALS() (in wp-includes/load.php)</h3>

<p>配列GLOBALSに格納されている値（register_globalsがtrueのときに格納される値）をクリアする。ただし、PHPでリザーブされている値（例えば、スーパーグローバル $<em>GET は実は$GLOBALS['</em>GET']に格納されている?）と、wp-config.phpで設定されたグローバル変数 table_prefix はクリア対象から除外されている。</p>

<h3>wp_fix_server_vars() (in wp-includes/load.php)</h3>

<p>環境によって$_SERVER変数の値が間違っていることがあるので、その修正用関数。</p>

<h3>wp_favicon_request() (in wp-includes/load.php)</h3>

<p>/favicon.icoにリクエストが来たら、長さ0のデータを返す? なんでこんな処理をしているのか、よくわからない。保留。</p>

<h3>wp_maintenance() (in wp-includes/load.php)</h3>

<p>メンテナンスモードの処理。WordPressのアップグレード時などに使われるらしい。</p>

<h3>timer_start() (in wp-includes/load.php)</h3>

<p>グローバル変数 $timestart にこの関数が呼ばれた時刻を格納する。timer_stop()と対にして意味を持つようで、timer_stop()で当該ページが表示されるのにどれくらいの時間がかかるか測定するもののようだ。</p>

<h3>wp_debug_mode() (in wp-includes/load.php)</h3>

<p>デバッグモードの設定。今は飛ばしておいてよさそう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpressのソースコードを読む(1)]]></title>
    <link href="http://kunishi.github.io/blog/2012/08/10/reading-wordpress-source-code/"/>
    <updated>2012-08-10T02:57:00+09:00</updated>
    <id>http://kunishi.github.io/blog/2012/08/10/reading-wordpress-source-code</id>
    <content type="html"><![CDATA[<p>とりあえず読み始めた。</p>

<h2>ソースコードの用意</h2>

<p>オリジナルのレポジトリは<a href="http://core.svn.wordpress.org/trunk/">wordpress.orgのsubversionレポジトリ</a>にある。いまどきsubversionは辛い。</p>

<p>しかし、このレポジトリをGitにしたものが<a href="https://github.com/WordPress/WordPress">Githubで公開</a>されている。15分ごとにオリジナルのレポジトリと同期するようだ。今回の目的にはこれで充分である。</p>

<h2>index.php</h2>

<p>https://github.com/WordPress/WordPress/blob/master/index.php</p>

<p>WP_USE_THEMES を true にしてwp-blog-header.phpをrequireしているだけ。</p>

<h2>wp-blog-header.php</h2>

<p>https://github.com/WordPress/WordPress/blob/master/wp-blog-header.php</p>

<p>$wp_did_headerという変数がセットされているかチェックしたり、セットされていなければtrueにしたりしているが、とりあえずこれは保留。</p>

<p>その後、wp-load.phpをrequire_onceし、関数wp()を実行し、template-loader.phpをrequire_once。まずwp-load.phpに行くことにする。</p>

<h2>wp-load.php</h2>

<p>https://github.com/WordPress/WordPress/blob/master/wp-load.php</p>

<p>主にwp-config.phpのロード。なければエラーメッセージを出し、wp-config.php自動生成用PHPであるsetup-config.phpへのリンクを示して終了。</p>
]]></content>
  </entry>
  
</feed>
